<?php

App::uses('AppModel', 'Model');

class SeoRouter extends AppModel
{
    public $useTable = 'seo_routers';

    public $validate = array(
        'object_id' => array(
            'rule' => 'isUnique',
            'message' => 'This object_id has already been taken.'
        ),
        'route' => array(
            'rule' => 'isUnique',
            'message' => 'This route has already been taken.'
        )
    );

    public $customSchema = array(
        'id' => '',
        'object_id' => '',
        'object_code' => '',
        'route' => '',
        'defaults' => '',
        'options' => '',
        'status' => '',
        'user' => '',
        'created' => '',
        'modified' => '',
    );

    public function checkExistsCustom($id) {
        $result = false;
        if(!is_object($id)) {
            $id = new MongoId($id);
        }
        if(isset($id) && strlen($id)) {
            $result = $this->find('first', array(
                'object_id' => $id
            ));
        }
        return $result;
    }

    public function checkExistsRoute($route = '') {
        $result = false;
        if(isset($route) && strlen($route)) {
            $result = $this->find('first', array('conditions' => array(
                'route' => $route
            )));
        }
        return (bool) $result;
    }

    public function afterSave($created, $options = array())
    {
        parent::afterSave($created, $options); // TODO: Change the autogenerated stub
        $id = $this->id;
        $result = $this->find('first', array('conditions' => array(
            'id' => $id,
        )));
        $ObjectCode = $result[$this->alias]['object_code'];
        $ObjectId = $result[$this->alias]['object_id'];
        $SeoUrl=$result[$this->alias]['route'];
        $objectModel = Inflector::classify($ObjectCode);
        App::import('Model', $objectModel);
        if (class_exists($objectModel)) {
            $model = new $objectModel;
            $model->id = new MongoId($ObjectId);
            $model->saveField('seo_url', $SeoUrl, array('callbacks'=>false));
        }
    }

    public function beforeSave($options = array())
    {
        parent::beforeSave($options); // TODO: Change the autogenerated stub
        if(!empty($this->data[$this->alias]['route'])){
            $router=$this->data[$this->alias]['route'];
            $Frist=substr($router,0,1);
            if($Frist!=='/'){
                $this->data[$this->alias]['route']= substr_replace($router,"/",0,0);
            }
        }
    }
}
